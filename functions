# Create a new directory and enter it.
function md() {
  mkdir -p "$@" && cd "$@"
}

# gitignore.io / Generate useful .gitignore files for your project
# http://gitignore.io/cli
function gi() {
    curl http://gitignore.io/api/$@ ;
}

# Display the mount information more nicely.
# http://www.catonmat.net/blog/another-ten-one-liners-from-commandlinefu-explained/
nicemount() {
    (echo "DEVICE PATH TYPE FLAGS" && mount | awk '$2=$4="";1') | column -t;
}

# Extract pages from PDF file via Ghostscript.
# Sourche: http://sandeepsidhu.wordpress.com/2010/12/11/extract-pages-from-a-pdf-file-in-ubuntu-10-10/
function pdf-extract() {
  # this function uses 3 arguments:
  # $1 is the first page of the range to extract
  # $2 is the last page of the range to extract
  # $3 is the input file
  # output file will be named "inputfile_pXX-pYY.pdf"
  ghostscript -sDEVICE=pdfwrite -dNOPAUSE -dBATCH -dSAFER \
  -dFirstPage=${1} \
  -dLastPage=${2} \
  -sOutputFile=${3%.pdf}_page${1}_to_page${2}.pdf \
  ${3}
}

# SVN color
# Source: http://stackoverflow.com/questions/8786400/svn-add-colors-on-command-line-svn-with-awk-in-bash
function svn {
  # Skip any subversion command that has more then one argument.
  # Such commands mostly open an editor, e.g. svn propedit.
  if [ $# -gt  1 ]
  then
    echo "Subversion command with more then one argument. Skipping color script."
    command svn "$@";
  fi
  # Skip the color script when running an svn commit.
  if [ "x$1" = "xci" ] || [ "x$1" =  "xcommit" ] || [ "x$1" = "xadd" ] || [ "x$1" = "xblame" ] || [ "x$1" = "xpropedit" ]
  then
    command svn "$@";
    return;
  fi

  # Pipe svn through awk to colorize its output.
  command svn "$@" | awk '
  BEGIN {
    cpt_c=0;
  }
  {
    if        ($1=="C") {
      cpt_c=cpt_c+1;
      print "\033[31m" $0 "\033[00m";  # Conflicts are displayed in red
    }
    else if   ($1=="M") {
      print "\033[31m" $0 "\033[00m";  # Modified in red
    }
    else if   ($1=="A") {
      print "\033[32m" $0 "\033[00m";  # Add in green
    }
    else if   ($1=="?") {
      print "\033[36m" $0 "\033[00m";  # New in cyan
    }
    else if   ($1=="D") {
      print "\033[31m" $0 "\033[00m";  # Delete in red
    }
    else if   ($1=="U") {
      print "\033[35m" $0 "\033[00m";  # Updated in light magenta
    }
    else if   ($1=="X") {
      print "\033[33m" $0 "\033[00m";  # No changes in yellow.
    }
    else if   ($1=="At" || $1 == "External") {
      print "\033[33m" $0 "\033[00m";  # Revision numbers in brown.
    }
    else                {
      print $0;                        # No color, just print the line
    }
  }
  END {
    print cpt_c, " conflicts are found.";
  }';
}

# Syntax highlighting for less.
# Requires python-pygments.
if command_exists pygmentize; then
  function pless {
    if [ -n "$1" ]; then
      pygmentize "$1" | less -r
    else
      echo "Usage: $0 argument."
    fi
  }
fi


# Load 'colorize maven' script if present.
[[ -s "$HOME/scripts/colorize-maven/colorize-maven.sh" ]] && . "$HOME/scripts/colorize-maven/colorize-maven.sh"



# Display authors of a remote SVN repository
# Source: https://github.com/nirvdrum/svn2git
function svnauthors {
  if [ $# -eq 0 ]; then
    echo "Usage: $0 SVN_REPOSITORY_URL"
  else
    echo "Retrieving authors from $1 ..."
    svn log --quiet "$1" | grep -E "r[0-9]+ \| .+ \|" | cut -d'|' -f2 | sed 's/^ //' | sort | uniq
  fi
}

